<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns:tns="http://www.example.org/myService/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="MyServiceImplService"
	targetNamespace="http://www.example.org/myService/">
	<!-- 创建schema类型 -->
	<wsdl:types>
		<xsd:schema targetNamespace="http://www.example.org/myService/">
			<xsd:element name="addRequest" type="tns:addRequest"/>
			<xsd:element name="addResponse" type="tns:addResponse"/>
			<xsd:element name="divideRequest" type="tns:divideRequest"/>
			<xsd:element name="divideResponse" type="tns:divideResponse"/>
			<xsd:element name="authInfo" type="tns:authInfo"/>
			<xsd:element name="serviceException" type="tns:serviceExceptionType"/>
			
			<!-- 创建add请求对象类型 ，name对应类名，包含两个参数-->
			<xsd:complexType name="addRequest">
				<xsd:sequence>
					<xsd:element name="num1" type="xsd:int"/>
					<xsd:element name="num2" type="xsd:int"/>
				</xsd:sequence>
			</xsd:complexType>
			
			<!-- 创建add返回类型 -->
			<xsd:complexType name="addResponse">
				<xsd:sequence>
					<xsd:element name="addResult" type="xsd:int"/>
				</xsd:sequence>
			</xsd:complexType>
			
			<!-- 创建divide请求类型 ，包含两个参数-->
			<xsd:complexType name="divideRequest">
				<xsd:sequence>
					<xsd:element name="num1" type="xsd:int"/>
					<xsd:element name="num2" type="xsd:int"/>
				</xsd:sequence>
			</xsd:complexType>
			
			<!-- 创建divide返回类型 -->
			<xsd:complexType name="divideResponse">
				<xsd:sequence>
					<xsd:element name="divideResult" type="xsd:int"/>
				</xsd:sequence>
			</xsd:complexType>
			
			<!-- 创建header头部类型 -->
			<xsd:complexType name="authInfo">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string"/>
					<xsd:element name="password" type="xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
			
			<!-- 创建异常信息 -->
			<xsd:complexType name="serviceExceptionType">
				<xsd:sequence>
					<xsd:element name="message" type="xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
	</wsdl:types>
	
	<!-- 创建message。一个message代表一个SOAP消息（请求和响应） -->
	<wsdl:message name="addRequest">
		<wsdl:part name="addRequest" element="tns:addRequest" />
	</wsdl:message>
	<wsdl:message name="addResponse">
		<wsdl:part name="addResponse" element="tns:addResponse"/>
	</wsdl:message>
	<wsdl:message name="divideRequest">
		<wsdl:part name="divideRequest" element="tns:divideRequest"/>
	</wsdl:message>
	<wsdl:message name="divideResponse">
		<wsdl:part name="divideResponse" element="tns:divideResponse"/>
	</wsdl:message>
	<wsdl:message name="authInfo">
		<wsdl:part name="authInfo" element="tns:authInfo"/>
	</wsdl:message>
	<wsdl:message name="serviceException">
		<wsdl:part name="fault" element="tns:serviceException"/>
	</wsdl:message>
	
	<!-- 编写portType(name对应着接口、operation对应着发布的方法, input对应参数，output对应返回) -->
	<wsdl:portType name="MyService">
		<!-- add方法的参数和返回值,异常配置在wsdl:fault -->
		<wsdl:operation name="add">
			<wsdl:input message="tns:addRequest" />
			<wsdl:output message="tns:addResponse"/>
		</wsdl:operation>
		
		<wsdl:operation name="divide">
			<wsdl:input message="tns:divideRequest" />
			<wsdl:output message="tns:divideResponse" />
			<wsdl:fault name="serviceException" message="tns:serviceException"/>
		</wsdl:operation>
	</wsdl:portType>
	
	<!-- 编写binding，对接口和方法指定编码样式 ,type对应着portType的name属性-->
	<wsdl:binding name="MyServiceSOAP" type="tns:MyService">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<wsdl:operation name="add">
			<wsdl:input>
				<soap:body use="literal" />
				<soap:header use="literal" part="authInfo" message="tns:authInfo"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		
		<wsdl:operation name="divide">
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
			<wsdl:fault name="serviceException">
				<soap:fault name="serviceException" use="literal"/>
			</wsdl:fault>
		</wsdl:operation>
	</wsdl:binding>
	
	<!-- 发布service,name必须保持和definitions的name属性，可手动修改为接口类+ImplService 
		binding对应着定义的binding的name属性， name可手动修改为接口类+ImplPort
		address为wsdl发布的访问地址-->
	<wsdl:service name="MyServiceImplService" >
		<wsdl:port name="MyServiceImplPort" binding="tns:MyServiceSOAP">
			<soap:address location="http://localhost:8989/ms"/>
		</wsdl:port>
	</wsdl:service>
	
</wsdl:definitions>
